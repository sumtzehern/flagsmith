# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 88
target-version = ['py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.direnv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
  'if TYPE_CHECKING:',
  'if typing.TYPE_CHECKING:',
  '@(abc\\.)?abstractmethod',
]

[tool.isort]
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
line_length = 79
known_first_party = [
  'analytics',
  'app',
  'custom_auth',
  'environments',
  'integrations',
  'organisations',
  'projects',
  'segments',
  'tests',
  'users',
  'webhooks',
  'api',
  'audit',
  'e2etests',
  'features',
  'permissions',
  'util',
]
known_third_party = [
  '_pytest',
  'apiclient',
  'app_analytics',
  'axes',
  'chargebee',
  'core',
  'coreapi',
  'corsheaders',
  'dj_database_url',
  'django',
  'django_lifecycle',
  'djoser',
  'drf_writable_nested',
  'drf_yasg',
  'environs',
  'google',
  'influxdb_client',
  'ordered_model',
  'pyotp',
  'pytest',
  'pytz',
  'requests',
  'responses',
  'rest_framework',
  'rest_framework_nested',
  'rest_framework_recursive',
  'sentry_sdk',
  'shortuuid',
  'simple_history',
  'six',
  'task_processor',
  'telemetry',
  'tests',
  'trench',
  'whitenoise',
]
skip = ['migrations', '.venv', '.direnv']

[tool.pytest.ini_options]
addopts = ['--ds=app.settings.test', '-vvvv', '-p', 'no:warnings']
console_output_style = 'count'

[tool.poetry]
name = "flagsmith-api"
version = "2.68.0"
description = "The API component for the Flagsmith application."
authors = ["Flagsmith <support@flagsmith.com>"]
readme = "readme.md"

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
django = "~3.2.25"
rudder-sdk-python = "~2.0.2"
segment-analytics-python = "~2.2.3"
backoff = "~2.2.1"
appdirs = "~1.4.4"
django-cors-headers = "~3.5.0"
djangorestframework = "~3.15.1"
gunicorn = "~22.0.0"
pyparsing = "~2.4.7"
requests = "~2.32.2"
six = "~1.16.0"
whitenoise = "~6.0.0"
dj-database-url = "~0.5.0"
drf-nested-routers = "~0.92.1"
shortuuid = "~1.0.1"
sendgrid-django = "~4.2.0"
psycopg2-binary = "~2.9.5"
coreapi = "~2.3.3"
django-simple-history = "~2.12.0"
google-api-python-client = "~1.12.5"
oauth2client = "~4.1.3"
djangorestframework-recursive = "~0.1.2"
packaging = "~23.0"
chargebee = "^2.7.7"
python-http-client = "~3.3.7"
django-health-check = "~3.18.2"
django-admin-sso = "~3.1.0"
drf-yasg = "~1.21.6"
django-debug-toolbar = "~3.2.1"
sentry-sdk = "~2.8.0"
environs = "~9.2.0"
django-lifecycle = "~1.0.0"
drf-writable-nested = "~0.6.2"
django-filter = "~2.4.0"
flagsmith-flag-engine = "^5.1.1"
boto3 = "~1.28.78"
slack-sdk = "~3.9.0"
asgiref = "~3.5.0"
opencensus-ext-azure = "~1.1.4"
opencensus-ext-django = "~0.7.6"
djangorestframework-api-key = "~2.2.0"
pymemcache = "~4.0.0"
google-re2 = "^1.0"
django-softdelete = "~0.10.5"
simplejson = "~3.19.1"
djoser = "~2.2.2"
django-storages = "~1.10.1"
django-environ = "~0.4.5"
influxdb-client = "~1.28.0"
django-ordered-model = "~3.4.1"
django-ses = "~3.5.0"
django-axes = "~5.32.0"
pydantic = "^2.3.0"
pyngo = "~2.0.1"
flagsmith = "^3.6.0"
python-gnupg = "^0.5.1"
django-redis = "^5.4.0"
pygithub = "2.1.1"
hubspot-api-client = "^8.2.1"
djangorestframework-dataclasses = "^1.3.1"
pyotp = "^2.9.0"
flagsmith-task-processor = { git = "https://github.com/Flagsmith/flagsmith-task-processor", tag = "v1.0.1" }
flagsmith-common = { git = "https://github.com/Flagsmith/flagsmith-common", tag = "v1.0.0" }

[tool.poetry.group.auth-controller]
optional = true

[tool.poetry.group.auth-controller.dependencies]
flagsmith-auth-controller = { git = "https://github.com/flagsmith/flagsmith-auth-controller", tag = "v0.1.2" }

[tool.poetry.group.saml]
optional = true

[tool.poetry.group.saml.dependencies]
pysaml2 = "^7.4.2"

[tool.poetry.group.ldap]
optional = true

[tool.poetry.group.ldap.dependencies]
flagsmith-ldap = { git = "https://github.com/flagsmith/flagsmith-ldap", tag = "v0.1.0" }

[tool.poetry.group.workflows]
optional = true

[tool.poetry.group.workflows.dependencies]
workflows-logic = { git = "https://github.com/flagsmith/flagsmith-workflows", tag = "v2.4.2" }

[tool.poetry.group.dev.dependencies]
django-test-migrations = "~1.2.0"
responses = "~0.22.0"
pre-commit = "~3.0.4"
pytest-mock = "~3.10.0"
pytest-lazy-fixture = "~0.6.3"
moto = "~4.1.3"
pytest-freezegun = "~0.4.2"
pytest-xdist = "~3.2.1"
pytest = "~7.2.1"
pytest-django = "^4.5.2"
pytest-cov = "~4.1.0"
datamodel-code-generator = "~0.25"
requests-mock = "^1.11.0"
django-extensions = "^3.2.3"
pdbpp = "^0.10.3"
django-capture-on-commit-callbacks = "^1.11.0"
mypy-boto3-dynamodb = "^1.33.0"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"
